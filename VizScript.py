import os
import sys
import zipfile
from pprint import pprint
import matplotlib.pyplot as plt
import geopandas 
import pandas as pd
import pysal
import numpy as np
from tabula import read_pdf
#from tabula import convert_into

zip = sys.argv[1]
# plot = sys.argv[2]
# splits = sys.argv[3]
# scheme = sys.argv[4]
# colors = sys.argv[5]
# print(sys.argv)
# cd print(type(sys.argv[1]))
# print(os.path.exists(zip))

if os.path.exists(zip) is True:
    zip_ref = zipfile.ZipFile(zip,"r")
    zip_ref.extractall(".") #cur directory
    zip_ref.close()

    for root, dirs, files in os.walk("."):
        for filename in files:
            #print(filenanme)
            if filename.endswith(".geojson"): #get geojson file
                geoJsonFile = os.path.join(root, filename)
                #os.startfile(geoJsonFile)
                #print(geoJsonFile)
                dataFrame = geopandas.read_file(geoJsonFile)
                random = dataFrame.total_bounds  #(gets you plot bounds)
                print(random)
                
                #print(dataFrame.plot())
            if filename.endswith(".csv"):
                csvFile = os.path.join(root,filename)  
                csv = pd.read_csv(csvFile)
                csv = csv.dropna()
                
            if filename.endswith("_documentation.pdf"):
                pdfFile = os.path.join(root, filename) 
                #os.startfile(pdfFile)
                pdf = read_pdf(pdfFile, pages = 2, output_format="csv")
                #print(pdf)
                pdf.columns = ["Title","Info"]
                # csv = pd.read_csv(pdf)
                for i in range(len(pdf["Title"])):
                    if (pdf.iloc[i]["Title"] == "Title"):
                        title = pdf.iloc[i]["Info"]   
        # print(dataFrame)
        # print(csv)
        merged = pd.merge(dataFrame, csv, how ="left", left_on = ["iso", "gbid", "adm", "adm_int"], right_on = ["iso", "gbid", "adm", "adm_int"] ) 
        merged = merged.dropna()
        # print(merged)
        merged.plot(column = raw_input("Specify Column You'd Like to Plot: "),  k = 5, cmap = "Greens", linewidth = 1.8, edgecolor='4.8', scheme = "Quantiles", legend=True, figsize = (32,4))
        plt.axis("off")
        plt.title(title)
        plt.text(12,4, "Generated by Geoquery.org", fontsize = 8)
        plt.savefig("map_export1.png", dpi = 300)
       # plt.show()

    